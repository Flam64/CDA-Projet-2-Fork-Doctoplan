version: "3.8"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

  seed:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: sh -c "sleep 15 && npm run seed"
    depends_on:
      - server
      - postgres
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: "no"

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

  codegen:
    build:
      context: ./client
      dockerfile: Dockerfile
    command: npm run codegen:watch
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
      - client

  gateway:
    image: nginx:latest
    ports:
      - "7000:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - client
      - codegen

volumes:
  postgres_data: